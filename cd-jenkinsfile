pipeline{
    agent any
    environment {
        TODAY = sh(script: "date +%Y-%m-%d_%H-%M-%S", returnStdout: true).trim()
        PROJECT_NAME = "nodejs-app1"
        AZURE_GITHUB_USERNAME = "gogularaja"
        AZURE_GITHUB_EMAIL = "gogularaja.sr@gmail.com"
        AZURE_LOCAL_GITHUB_PATH = "/var/lib/jenkins/workspace/local-git"
        AZURE_LOCAL_GITHUB_CLONE_URL = "nodejs-app1.scm.azurewebsites.net:443/nodejs-app1.git"
    }
    
    parameters{
        string(name:'GITHUB_BRANCH',description:'Provid the branch name to implement CD')
        string(name: 'CI_WORKSPACE', description: 'Provide the workspace path of the CI job')
    }
    
    stages{
        stage('deployment'){
            steps{
                script{
                    if("${params.GITHUB_BRANCH}" == "master")
                    {
                        echo "master branch"
                    }
                    else if(params.GITHUB_BRANCH.startsWith("release"))
                    {
                        echo "release branch"
                        withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'gogularaja-azure-git', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD']])
                        {
                            sh "cp -R ${params.CI_WORKSPACE}/* ${AZURE_LOCAL_GITHUB_PATH}/release/${PROJECT_NAME}"
                            sh '''
                                cd ${AZURE_LOCAL_GITHUB_PATH}/release/${PROJECT_NAME}
                                git config user.email "${AZURE_GITHUB_EMAIL}"
                                git config user.name "${AZURE_GITHUB_USERNAME}"
                                git add .
                                git commit -m "new change ${TODAY}"
                                git push https://$USERNAME:$PASSWORD@${AZURE_LOCAL_GITHUB_CLONE_URL}
                            '''
                        }
                    }
                    else if("${params.GITHUB_BRANCH}" == "develop")
                    {
                        echo "develop branch"
                    }
                    else
                    {
                        echo "required branch does not exists"
                    }
                }
            }        
        }
    }
}
